{
  "version": 3,
  "sources": ["../../node_modules/core-js/modules/es.array.find.js", "../../node_modules/core-js/es/array/find.js"],
  "sourcesContent": ["'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\n// eslint-disable-next-line es/no-array-prototype-find -- testing\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.es/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n", "'use strict';\nrequire('../../modules/es.array.find');\nvar entryUnbind = require('../../internals/entry-unbind');\n\nmodule.exports = entryUnbind('Array', 'find');\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,QAAI,IAAI;AACR,QAAI,QAAQ,0BAAwC;AACpD,QAAI,mBAAmB;AAEvB,QAAI,OAAO;AACX,QAAI,cAAc;AAIlB,QAAI,QAAQ,CAAC;AAAG,YAAM,CAAC,EAAE,IAAI,EAAE,WAAY;AAAE,sBAAc;AAAA,MAAO,CAAC;AAInE,MAAE,EAAE,QAAQ,SAAS,OAAO,MAAM,QAAQ,YAAY,GAAG;AAAA,MACvD,MAAM,SAAS,KAAK,YAAqC;AACvD,eAAO,MAAM,MAAM,YAAY,UAAU,SAAS,IAAI,UAAU,CAAC,IAAI,MAAS;AAAA,MAChF;AAAA,IACF,CAAC;AAGD,qBAAiB,IAAI;AAAA;AAAA;;;ACrBrB;AAAA;AACA;AACA,QAAI,cAAc;AAElB,WAAO,UAAU,YAAY,SAAS,MAAM;AAAA;AAAA;",
  "names": []
}
